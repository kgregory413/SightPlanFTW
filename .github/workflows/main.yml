# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          #!/usr/bin/env bash

### Switch to master branch
git checkout master

### Git pull to ensure that the repository is up-to-date
git pull

### Use current date to determine branch_name for new branch based on year and quarter.
getQuarter(){
    year=$(date +%Y)
    case $(date +%m) in
    01|02|03) qtr="Q1" ;;
    04|05|06) qtr="Q2" ;;
    07|08|09) qtr="Q3" ;;
    10|11|12) qtr="Q4" ;;
    esac
}

getPreviousQuarter(){
    year=$(date +%Y)
    case $(date +%m) in
    01|02|03) let year=year-1; qtr="Q4" ;;
    04|05|06) qtr="Q1" ;;
    07|08|09) qtr="Q2" ;;
    10|11|12) qtr="Q3" ;;
    esac
}

getQuarter

branch_name=alpha-$year-$qtr

### Create the branch and push changes
git branch $branch_name
git push
git checkout $branch_name

### Create and push the IAMALPHA sentinel file to the branch
echo Creating Sentinel File IAMALPHA !
touch IAMALPHA
git add IAMALPHA
git commit -m "Sentinel File Added"
git push

### Find name of the previous branch in order to compare the new branch to the old one.
getPreviousQuarter
previous_branch=alpha-$year-$qtr

### List a comparison of all branches that the previous alpha branch has that this new sprouted alpha branch will not.
echo Comparing old branch $previous_branch to the new branch $branch_name !
git diff $previous_branch $branch_name
